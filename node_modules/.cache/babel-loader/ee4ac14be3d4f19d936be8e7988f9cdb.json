{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/OrderBook.js\";\nimport React from \"react\";\nimport { Card } from \"antd\";\nimport { Table, Switch, Radio, Form, Space } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nconst scroll = {};\nscroll.y = 240;\nscroll.x = \"100vw\";\nconst columns = [{\n  title: \"Name\",\n  dataIndex: \"name\"\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  filters: [{\n    text: \"London\",\n    value: \"London\"\n  }, {\n    text: \"New York\",\n    value: \"New York\"\n  }],\n  onFilter: (value, record) => record.address.indexOf(value) === 0\n}, {\n  title: \"Action\",\n  key: \"action\",\n  sorter: true,\n  render: () => /*#__PURE__*/_jsxDEV(Space, {\n    size: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"ant-dropdown-link\",\n      children: [\"More actions \", /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 4\n  }, this)\n}];\nconst data = [];\n\nfor (let i = 1; i <= 10; i++) {\n  data.push({\n    key: i,\n    name: \"John Brown\",\n    age: `${i}2`,\n    address: `New York No. ${i} Lake Park`,\n    description: `My name is John Brown, I am ${i}2 years old, living in New York No. ${i} Lake Park.`\n  });\n}\n\nconst OrderBook = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"orderBook\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        pagination: {\n          position: \"bottom\"\n        },\n        columns: 2,\n        dataSource: data,\n        scroll: scroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        pagination: {\n          position: \"bottom\"\n        },\n        columns: 2,\n        dataSource: data,\n        scroll: scroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_c = OrderBook;\nexport default OrderBook; // const expandable = { expandedRowRender: record => <p>{record.description}</p> };\n// const title = () => 'Here is title';\n// const showHeader = true;\n// const footer = () => 'Here is footer';\n// const pagination = { position: 'bottom' };\n// class Demo extends React.Component {\n//   state = {\n//     bordered: false,\n//     loading: false,\n//     pagination,\n//     size: 'default',\n//     expandable,\n//     title: undefined,\n//     showHeader,\n//     footer,\n//     rowSelection: {},\n//     scroll: undefined,\n//     hasData: true,\n//     tableLayout: undefined,\n//     top: 'none',\n//     bottom: 'bottomRight',\n//   };\n//   handleToggle = prop => enable => {\n//     this.setState({ [prop]: enable });\n//   };\n//   handleSizeChange = e => {\n//     this.setState({ size: e.target.value });\n//   };\n//   handleTableLayoutChange = e => {\n//     this.setState({ tableLayout: e.target.value });\n//   };\n//   handleExpandChange = enable => {\n//     this.setState({ expandable: enable ? expandable : undefined });\n//   };\n//   handleEllipsisChange = enable => {\n//     this.setState({ ellipsis: enable });\n//   };\n//   handleTitleChange = enable => {\n//     this.setState({ title: enable ? title : undefined });\n//   };\n//   handleHeaderChange = enable => {\n//     this.setState({ showHeader: enable ? showHeader : false });\n//   };\n//   handleFooterChange = enable => {\n//     this.setState({ footer: enable ? footer : undefined });\n//   };\n//   handleRowSelectionChange = enable => {\n//     this.setState({ rowSelection: enable ? {} : undefined });\n//   };\n//   handleYScrollChange = enable => {\n//     this.setState({ yScroll: enable });\n//   };\n//   handleXScrollChange = e => {\n//     this.setState({ xScroll: e.target.value });\n//   };\n//   handleDataChange = hasData => {\n//     this.setState({ hasData });\n//   };\n//   render() {\n//     const { xScroll, yScroll, ...state } = this.state;\n//     const scroll = {};\n//     if (yScroll) {\n//       scroll.y = 240;\n//     }\n//     if (xScroll) {\n//       scroll.x = '100vw';\n//     }\n//     const tableColumns = columns.map(item => ({ ...item, ellipsis: state.ellipsis }));\n//     if (xScroll === 'fixed') {\n//       tableColumns[0].fixed = true;\n//       tableColumns[tableColumns.length - 1].fixed = 'right';\n//     }\n//     return (\n//       <>\n//         <Form\n//           layout=\"inline\"\n//           className=\"components-table-demo-control-bar\"\n//           style={{ marginBottom: 16 }}\n//         >\n//           <Form.Item label=\"Bordered\">\n//             <Switch checked={state.bordered} onChange={this.handleToggle('bordered')} />\n//           </Form.Item>\n//           <Form.Item label=\"loading\">\n//             <Switch checked={state.loading} onChange={this.handleToggle('loading')} />\n//           </Form.Item>\n//           <Form.Item label=\"Title\">\n//             <Switch checked={!!state.title} onChange={this.handleTitleChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Column Header\">\n//             <Switch checked={!!state.showHeader} onChange={this.handleHeaderChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Footer\">\n//             <Switch checked={!!state.footer} onChange={this.handleFooterChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Expandable\">\n//             <Switch checked={!!state.expandable} onChange={this.handleExpandChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Checkbox\">\n//             <Switch checked={!!state.rowSelection} onChange={this.handleRowSelectionChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Fixed Header\">\n//             <Switch checked={!!yScroll} onChange={this.handleYScrollChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Has Data\">\n//             <Switch checked={!!state.hasData} onChange={this.handleDataChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Ellipsis\">\n//             <Switch checked={!!state.ellipsis} onChange={this.handleEllipsisChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Size\">\n//             <Radio.Group value={state.size} onChange={this.handleSizeChange}>\n//               <Radio.Button value=\"default\">Default</Radio.Button>\n//               <Radio.Button value=\"middle\">Middle</Radio.Button>\n//               <Radio.Button value=\"small\">Small</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//           <Form.Item label=\"Table Scroll\">\n//             <Radio.Group value={xScroll} onChange={this.handleXScrollChange}>\n//               <Radio.Button value={undefined}>Unset</Radio.Button>\n//               <Radio.Button value=\"scroll\">Scroll</Radio.Button>\n//               <Radio.Button value=\"fixed\">Fixed Columns</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//           <Form.Item label=\"Table Layout\">\n//             <Radio.Group value={state.tableLayout} onChange={this.handleTableLayoutChange}>\n//               <Radio.Button value={undefined}>Unset</Radio.Button>\n//               <Radio.Button value=\"fixed\">Fixed</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//           <Form.Item label=\"Pagination Top\">\n//             <Radio.Group\n//               value={this.state.top}\n//               onChange={e => {\n//                 this.setState({ top: e.target.value });\n//               }}\n//             >\n//               <Radio.Button value=\"topLeft\">TopLeft</Radio.Button>\n//               <Radio.Button value=\"topCenter\">TopCenter</Radio.Button>\n//               <Radio.Button value=\"topRight\">TopRight</Radio.Button>\n//               <Radio.Button value=\"none\">None</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//           <Form.Item label=\"Pagination Bottom\">\n//             <Radio.Group\n//               value={this.state.bottom}\n//               onChange={e => {\n//                 this.setState({ bottom: e.target.value });\n//               }}\n//             >\n//               <Radio.Button value=\"bottomLeft\">BottomLeft</Radio.Button>\n//               <Radio.Button value=\"bottomCenter\">BottomCenter</Radio.Button>\n//               <Radio.Button value=\"bottomRight\">BottomRight</Radio.Button>\n//               <Radio.Button value=\"none\">None</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//         </Form>\n//       </>\n//     );\n//   }\n// }\n// ReactDOM.render(<Demo />, mountNode);\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderBook\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/OrderBook.js"],"names":["React","Card","Table","Switch","Radio","Form","Space","DownOutlined","scroll","y","x","columns","title","dataIndex","sorter","a","b","age","filters","text","value","onFilter","record","address","indexOf","key","render","data","i","push","name","description","OrderBook","position"],"mappings":"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":["import React from \"react\";\nimport { Card } from \"antd\";\nimport { Table, Switch, Radio, Form, Space } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nconst scroll = {};\n\nscroll.y = 240;\n\nscroll.x = \"100vw\";\n\nconst columns = [\n\t{\n\t\ttitle: \"Name\",\n\t\tdataIndex: \"name\",\n\t},\n\t{\n\t\ttitle: \"Age\",\n\t\tdataIndex: \"age\",\n\t\tsorter: (a, b) => a.age - b.age,\n\t},\n\t{\n\t\ttitle: \"Address\",\n\t\tdataIndex: \"address\",\n\t\tfilters: [\n\t\t\t{\n\t\t\t\ttext: \"London\",\n\t\t\t\tvalue: \"London\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"New York\",\n\t\t\t\tvalue: \"New York\",\n\t\t\t},\n\t\t],\n\t\tonFilter: (value, record) => record.address.indexOf(value) === 0,\n\t},\n\t{\n\t\ttitle: \"Action\",\n\t\tkey: \"action\",\n\t\tsorter: true,\n\t\trender: () => (\n\t\t\t<Space size=\"middle\">\n\t\t\t\t<a>Delete</a>\n\t\t\t\t<a className=\"ant-dropdown-link\">\n\t\t\t\t\tMore actions <DownOutlined />\n\t\t\t\t</a>\n\t\t\t</Space>\n\t\t),\n\t},\n];\n\nconst data = [];\nfor (let i = 1; i <= 10; i++) {\n\tdata.push({\n\t\tkey: i,\n\t\tname: \"John Brown\",\n\t\tage: `${i}2`,\n\t\taddress: `New York No. ${i} Lake Park`,\n\t\tdescription: `My name is John Brown, I am ${i}2 years old, living in New York No. ${i} Lake Park.`,\n\t});\n}\n\nconst OrderBook = () => {\n\treturn (\n\t\t<div className=\"\">\n\t\t\t<Card className=\"orderBook\">\n\t\t\t\t<Table\n\t\t\t\t\tpagination={{ position: \"bottom\" }}\n\t\t\t\t\tcolumns={2}\n\t\t\t\t\tdataSource={data}\n\t\t\t\t\tscroll={scroll}\n\t\t\t\t/>\n\t\t\t\t<Table\n\t\t\t\t\tpagination={{ position: \"bottom\" }}\n\t\t\t\t\tcolumns={2}\n\t\t\t\t\tdataSource={data}\n\t\t\t\t\tscroll={scroll}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default OrderBook;\n\n// const expandable = { expandedRowRender: record => <p>{record.description}</p> };\n// const title = () => 'Here is title';\n// const showHeader = true;\n// const footer = () => 'Here is footer';\n// const pagination = { position: 'bottom' };\n\n// class Demo extends React.Component {\n//   state = {\n//     bordered: false,\n//     loading: false,\n//     pagination,\n//     size: 'default',\n//     expandable,\n//     title: undefined,\n//     showHeader,\n//     footer,\n//     rowSelection: {},\n//     scroll: undefined,\n//     hasData: true,\n//     tableLayout: undefined,\n//     top: 'none',\n//     bottom: 'bottomRight',\n//   };\n\n//   handleToggle = prop => enable => {\n//     this.setState({ [prop]: enable });\n//   };\n\n//   handleSizeChange = e => {\n//     this.setState({ size: e.target.value });\n//   };\n\n//   handleTableLayoutChange = e => {\n//     this.setState({ tableLayout: e.target.value });\n//   };\n\n//   handleExpandChange = enable => {\n//     this.setState({ expandable: enable ? expandable : undefined });\n//   };\n\n//   handleEllipsisChange = enable => {\n//     this.setState({ ellipsis: enable });\n//   };\n\n//   handleTitleChange = enable => {\n//     this.setState({ title: enable ? title : undefined });\n//   };\n\n//   handleHeaderChange = enable => {\n//     this.setState({ showHeader: enable ? showHeader : false });\n//   };\n\n//   handleFooterChange = enable => {\n//     this.setState({ footer: enable ? footer : undefined });\n//   };\n\n//   handleRowSelectionChange = enable => {\n//     this.setState({ rowSelection: enable ? {} : undefined });\n//   };\n\n//   handleYScrollChange = enable => {\n//     this.setState({ yScroll: enable });\n//   };\n\n//   handleXScrollChange = e => {\n//     this.setState({ xScroll: e.target.value });\n//   };\n\n//   handleDataChange = hasData => {\n//     this.setState({ hasData });\n//   };\n\n//   render() {\n//     const { xScroll, yScroll, ...state } = this.state;\n\n//     const scroll = {};\n//     if (yScroll) {\n//       scroll.y = 240;\n//     }\n//     if (xScroll) {\n//       scroll.x = '100vw';\n//     }\n\n//     const tableColumns = columns.map(item => ({ ...item, ellipsis: state.ellipsis }));\n//     if (xScroll === 'fixed') {\n//       tableColumns[0].fixed = true;\n//       tableColumns[tableColumns.length - 1].fixed = 'right';\n//     }\n\n//     return (\n//       <>\n//         <Form\n//           layout=\"inline\"\n//           className=\"components-table-demo-control-bar\"\n//           style={{ marginBottom: 16 }}\n//         >\n//           <Form.Item label=\"Bordered\">\n//             <Switch checked={state.bordered} onChange={this.handleToggle('bordered')} />\n//           </Form.Item>\n//           <Form.Item label=\"loading\">\n//             <Switch checked={state.loading} onChange={this.handleToggle('loading')} />\n//           </Form.Item>\n//           <Form.Item label=\"Title\">\n//             <Switch checked={!!state.title} onChange={this.handleTitleChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Column Header\">\n//             <Switch checked={!!state.showHeader} onChange={this.handleHeaderChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Footer\">\n//             <Switch checked={!!state.footer} onChange={this.handleFooterChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Expandable\">\n//             <Switch checked={!!state.expandable} onChange={this.handleExpandChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Checkbox\">\n//             <Switch checked={!!state.rowSelection} onChange={this.handleRowSelectionChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Fixed Header\">\n//             <Switch checked={!!yScroll} onChange={this.handleYScrollChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Has Data\">\n//             <Switch checked={!!state.hasData} onChange={this.handleDataChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Ellipsis\">\n//             <Switch checked={!!state.ellipsis} onChange={this.handleEllipsisChange} />\n//           </Form.Item>\n//           <Form.Item label=\"Size\">\n//             <Radio.Group value={state.size} onChange={this.handleSizeChange}>\n//               <Radio.Button value=\"default\">Default</Radio.Button>\n//               <Radio.Button value=\"middle\">Middle</Radio.Button>\n//               <Radio.Button value=\"small\">Small</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//           <Form.Item label=\"Table Scroll\">\n//             <Radio.Group value={xScroll} onChange={this.handleXScrollChange}>\n//               <Radio.Button value={undefined}>Unset</Radio.Button>\n//               <Radio.Button value=\"scroll\">Scroll</Radio.Button>\n//               <Radio.Button value=\"fixed\">Fixed Columns</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//           <Form.Item label=\"Table Layout\">\n//             <Radio.Group value={state.tableLayout} onChange={this.handleTableLayoutChange}>\n//               <Radio.Button value={undefined}>Unset</Radio.Button>\n//               <Radio.Button value=\"fixed\">Fixed</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//           <Form.Item label=\"Pagination Top\">\n//             <Radio.Group\n//               value={this.state.top}\n//               onChange={e => {\n//                 this.setState({ top: e.target.value });\n//               }}\n//             >\n//               <Radio.Button value=\"topLeft\">TopLeft</Radio.Button>\n//               <Radio.Button value=\"topCenter\">TopCenter</Radio.Button>\n//               <Radio.Button value=\"topRight\">TopRight</Radio.Button>\n//               <Radio.Button value=\"none\">None</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//           <Form.Item label=\"Pagination Bottom\">\n//             <Radio.Group\n//               value={this.state.bottom}\n//               onChange={e => {\n//                 this.setState({ bottom: e.target.value });\n//               }}\n//             >\n//               <Radio.Button value=\"bottomLeft\">BottomLeft</Radio.Button>\n//               <Radio.Button value=\"bottomCenter\">BottomCenter</Radio.Button>\n//               <Radio.Button value=\"bottomRight\">BottomRight</Radio.Button>\n//               <Radio.Button value=\"none\">None</Radio.Button>\n//             </Radio.Group>\n//           </Form.Item>\n//         </Form>\n\n//       </>\n//     );\n//   }\n// }\n\n// ReactDOM.render(<Demo />, mountNode);\n"]},"metadata":{},"sourceType":"module"}