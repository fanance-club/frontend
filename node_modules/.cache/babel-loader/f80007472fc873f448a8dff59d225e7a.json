{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/hocs/FetchContractData2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nexport default function FetchContractData2(props) {\n  _s();\n\n  const [buyOrderDetailsArray, setBuyOrderDetailsArray] = useState([]);\n  const [sellOrderDetailsArray, setSellOrderDetailsArray] = useState([]);\n  useEffect(() => {\n    let buyOrdersArray = [];\n\n    for (let i = 0; i < props.buyCount; i++) {\n      let tempBuyOrderDetails = props.drizzleState.contracts.CelebrityExchange.buyOrders[props.buyOrders[i]];\n      tempBuyOrderDetails = tempBuyOrderDetails && tempBuyOrderDetails.value;\n      buyOrdersArray.push(tempBuyOrderDetails);\n    }\n\n    setBuyOrderDetailsArray(buyOrdersArray);\n    let tempSellOrdersArray = [];\n\n    for (let i = 0; i < props.sellCount; i++) {\n      let tempSellOrderDetails = props.drizzleState.contracts.CelebrityExchange.sellOrders[props.sellOrders[i]];\n      tempSellOrderDetails = tempSellOrderDetails && tempSellOrderDetails.value;\n      tempSellOrdersArray.push(tempSellOrderDetails);\n    }\n\n    setSellOrderDetailsArray(tempSellOrdersArray);\n    props.handleSellOrders(tempSellOrdersArray);\n    props.handleBuyOrders(buyOrdersArray); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.drizzleState.contracts.CelebrityExchange.buyOrders, props.drizzleState.contracts.CelebrityExchange.sellOrders, props.sellOrders, props.sellCount, props.buyOrders, props.buyCount]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FetchContractData2, \"jvdoTXtu/dhS84phwldA0Gl3f5o=\");\n\n_c = FetchContractData2;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchContractData2\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/hocs/FetchContractData2.js"],"names":["React","useState","useEffect","FetchContractData2","props","buyOrderDetailsArray","setBuyOrderDetailsArray","sellOrderDetailsArray","setSellOrderDetailsArray","buyOrdersArray","i","buyCount","tempBuyOrderDetails","drizzleState","contracts","CelebrityExchange","buyOrders","value","push","tempSellOrdersArray","sellCount","tempSellOrderDetails","sellOrders","handleSellOrders","handleBuyOrders"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AACjD,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDL,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACM,qBAAD,EAAwBC,wBAAxB,IAAoDP,QAAQ,CAAC,EAAD,CAAlE;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIO,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,QAA1B,EAAoCD,CAAC,EAArC,EAAyC;AACxC,UAAIE,mBAAmB,GACtBR,KAAK,CAACS,YAAN,CAAmBC,SAAnB,CAA6BC,iBAA7B,CAA+CC,SAA/C,CACCZ,KAAK,CAACY,SAAN,CAAgBN,CAAhB,CADD,CADD;AAIAE,MAAAA,mBAAmB,GAAGA,mBAAmB,IAAIA,mBAAmB,CAACK,KAAjE;AACAR,MAAAA,cAAc,CAACS,IAAf,CAAoBN,mBAApB;AACA;;AACDN,IAAAA,uBAAuB,CAACG,cAAD,CAAvB;AAEA,QAAIU,mBAAmB,GAAG,EAA1B;;AACA,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACgB,SAA1B,EAAqCV,CAAC,EAAtC,EAA0C;AACzC,UAAIW,oBAAoB,GACvBjB,KAAK,CAACS,YAAN,CAAmBC,SAAnB,CAA6BC,iBAA7B,CAA+CO,UAA/C,CACClB,KAAK,CAACkB,UAAN,CAAiBZ,CAAjB,CADD,CADD;AAIAW,MAAAA,oBAAoB,GAAGA,oBAAoB,IAAIA,oBAAoB,CAACJ,KAApE;AACAE,MAAAA,mBAAmB,CAACD,IAApB,CAAyBG,oBAAzB;AACA;;AACDb,IAAAA,wBAAwB,CAACW,mBAAD,CAAxB;AACAf,IAAAA,KAAK,CAACmB,gBAAN,CAAuBJ,mBAAvB;AACAf,IAAAA,KAAK,CAACoB,eAAN,CAAsBf,cAAtB,EAvBe,CAwBf;AACA,GAzBQ,EAyBN,CACFL,KAAK,CAACS,YAAN,CAAmBC,SAAnB,CAA6BC,iBAA7B,CAA+CC,SAD7C,EAEFZ,KAAK,CAACS,YAAN,CAAmBC,SAAnB,CAA6BC,iBAA7B,CAA+CO,UAF7C,EAGFlB,KAAK,CAACkB,UAHJ,EAIFlB,KAAK,CAACgB,SAJJ,EAKFhB,KAAK,CAACY,SALJ,EAMFZ,KAAK,CAACO,QANJ,CAzBM,CAAT;AAkCA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAtCuBR,kB;;KAAAA,kB","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function FetchContractData2(props) {\n\tconst [buyOrderDetailsArray, setBuyOrderDetailsArray] = useState([]);\n\tconst [sellOrderDetailsArray, setSellOrderDetailsArray] = useState([]);\n\tuseEffect(() => {\n\t\tlet buyOrdersArray = [];\n\t\tfor (let i = 0; i < props.buyCount; i++) {\n\t\t\tlet tempBuyOrderDetails =\n\t\t\t\tprops.drizzleState.contracts.CelebrityExchange.buyOrders[\n\t\t\t\t\tprops.buyOrders[i]\n\t\t\t\t];\n\t\t\ttempBuyOrderDetails = tempBuyOrderDetails && tempBuyOrderDetails.value;\n\t\t\tbuyOrdersArray.push(tempBuyOrderDetails);\n\t\t}\n\t\tsetBuyOrderDetailsArray(buyOrdersArray);\n\n\t\tlet tempSellOrdersArray = [];\n\t\tfor (let i = 0; i < props.sellCount; i++) {\n\t\t\tlet tempSellOrderDetails =\n\t\t\t\tprops.drizzleState.contracts.CelebrityExchange.sellOrders[\n\t\t\t\t\tprops.sellOrders[i]\n\t\t\t\t];\n\t\t\ttempSellOrderDetails = tempSellOrderDetails && tempSellOrderDetails.value;\n\t\t\ttempSellOrdersArray.push(tempSellOrderDetails);\n\t\t}\n\t\tsetSellOrderDetailsArray(tempSellOrdersArray);\n\t\tprops.handleSellOrders(tempSellOrdersArray);\n\t\tprops.handleBuyOrders(buyOrdersArray);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [\n\t\tprops.drizzleState.contracts.CelebrityExchange.buyOrders,\n\t\tprops.drizzleState.contracts.CelebrityExchange.sellOrders,\n\t\tprops.sellOrders,\n\t\tprops.sellCount,\n\t\tprops.buyOrders,\n\t\tprops.buyCount,\n\t]);\n\n\treturn <span></span>;\n}\n"]},"metadata":{},"sourceType":"module"}