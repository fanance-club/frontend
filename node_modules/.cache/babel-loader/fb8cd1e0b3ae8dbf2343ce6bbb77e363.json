{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/BuyOrderBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SingleBuyOrder from \"./SingleBuyOrder\";\nexport default function BuyOrderBook(props) {\n  _s();\n\n  const [buyOrders, setBuyOrders] = useState([{\n    id: 0\n  }]);\n  useEffect(() => {\n    const {\n      drizzle,\n      drizzleState\n    } = props;\n    let count = drizzleState.contracts.CelebrityExchange.buyOrderCount[props.buyOrderCount];\n    let buyOrders = [];\n\n    for (let i = 0; i < (count && count.value); i++) {\n      let buyOrder = drizzle.contracts.CelebrityExchange.methods[\"buyOrders\"].cacheCall(i);\n      buyOrders.push(buyOrder);\n    }\n\n    handleStatusChange(buyOrders);\n  });\n\n  function handleStatusChange(_buyOrders) {\n    setBuyOrders(_buyOrders);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: buyOrders.map(order => {\n      return /*#__PURE__*/_jsxDEV(SingleBuyOrder, {\n        drizzle: props.drizzle,\n        drizzleState: props.drizzleState,\n        order: order\n      }, order, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BuyOrderBook, \"05LhXT1IR/5tzcYvzoUfO8crcYk=\");\n\n_c = BuyOrderBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyOrderBook\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/BuyOrderBook.js"],"names":["React","useState","useEffect","SingleBuyOrder","BuyOrderBook","props","buyOrders","setBuyOrders","id","drizzle","drizzleState","count","contracts","CelebrityExchange","buyOrderCount","i","value","buyOrder","methods","cacheCall","push","handleStatusChange","_buyOrders","map","order"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,EAAE,EAAE;AAAN,GAAD,CAAD,CAA1C;AACAN,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM;AAAEO,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4BL,KAAlC;AACA,QAAIM,KAAK,GACRD,YAAY,CAACE,SAAb,CAAuBC,iBAAvB,CAAyCC,aAAzC,CACCT,KAAK,CAACS,aADP,CADD;AAIA,QAAIR,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,KAAK,IAAIA,KAAK,CAACK,KAAnB,CAAjB,EAA4CD,CAAC,EAA7C,EAAiD;AAChD,UAAIE,QAAQ,GAAGR,OAAO,CAACG,SAAR,CAAkBC,iBAAlB,CAAoCK,OAApC,CACd,WADc,EAEbC,SAFa,CAEHJ,CAFG,CAAf;AAGAT,MAAAA,SAAS,CAACc,IAAV,CAAeH,QAAf;AACA;;AACDI,IAAAA,kBAAkB,CAACf,SAAD,CAAlB;AACA,GAdQ,CAAT;;AAeA,WAASe,kBAAT,CAA4BC,UAA5B,EAAwC;AACvCf,IAAAA,YAAY,CAACe,UAAD,CAAZ;AACA;;AACD,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,cACEhB,SAAS,CAACiB,GAAV,CAAeC,KAAD,IAAW;AACzB,0BACC,QAAC,cAAD;AACC,QAAA,OAAO,EAAEnB,KAAK,CAACI,OADhB;AAEC,QAAA,YAAY,EAAEJ,KAAK,CAACK,YAFrB;AAIC,QAAA,KAAK,EAAEc;AAJR,SAGMA,KAHN;AAAA;AAAA;AAAA;AAAA,cADD;AAQA,KATA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;GAlCuBpB,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SingleBuyOrder from \"./SingleBuyOrder\";\n\nexport default function BuyOrderBook(props) {\n\tconst [buyOrders, setBuyOrders] = useState([{ id: 0 }]);\n\tuseEffect(() => {\n\t\tconst { drizzle, drizzleState } = props;\n\t\tlet count =\n\t\t\tdrizzleState.contracts.CelebrityExchange.buyOrderCount[\n\t\t\t\tprops.buyOrderCount\n\t\t\t];\n\t\tlet buyOrders = [];\n\t\tfor (let i = 0; i < (count && count.value); i++) {\n\t\t\tlet buyOrder = drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"buyOrders\"\n\t\t\t].cacheCall(i);\n\t\t\tbuyOrders.push(buyOrder);\n\t\t}\n\t\thandleStatusChange(buyOrders);\n\t});\n\tfunction handleStatusChange(_buyOrders) {\n\t\tsetBuyOrders(_buyOrders);\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{buyOrders.map((order) => {\n\t\t\t\treturn (\n\t\t\t\t\t<SingleBuyOrder\n\t\t\t\t\t\tdrizzle={props.drizzle}\n\t\t\t\t\t\tdrizzleState={props.drizzleState}\n\t\t\t\t\t\tkey={order}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}