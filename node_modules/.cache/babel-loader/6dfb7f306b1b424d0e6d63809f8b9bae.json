{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/hocs/FetchContractData1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FetchContractData2 from \"./FetchContractData2\";\nimport tokenContract from \"../contracts/CelebrityToken.json\";\nexport default function FetchContractData1(props) {\n  _s();\n\n  const [buyOrders, setBuyOrders] = useState([{\n    id: 0\n  }]);\n  const [buyOrderCountValue, setBuyOrderCountValue] = useState(0);\n  const [sellOrders, setSellOrders] = useState([{\n    id: 0\n  }]);\n  const [sellOrderCountValue, setSellOrderCountValue] = useState(0);\n  useEffect(() => {\n    let buyCount = props.drizzleState.contracts.CelebrityExchange.buyOrderCount[props.buyOrderCount];\n    let tempBuyOrders = [];\n\n    for (let i = 0; i < (buyCount && buyCount.value); i++) {\n      let buyOrder = props.drizzle.contracts.CelebrityExchange.methods[\"buyOrders\"].cacheCall(i);\n      tempBuyOrders.push(buyOrder);\n    }\n\n    setBuyOrders(tempBuyOrders);\n    setBuyOrderCountValue(buyCount && buyCount.value);\n    let sellCount = props.drizzleState.contracts.CelebrityExchange.sellOrderCount[props.sellOrderCount];\n    let tempSellOrders = [];\n\n    for (let i = 0; i < (sellCount && sellCount.value); i++) {\n      let sellOrder = props.drizzle.contracts.CelebrityExchange.methods[\"sellOrders\"].cacheCall(i);\n      tempSellOrders.push(sellOrder);\n    }\n\n    setSellOrders(tempSellOrders);\n    setSellOrderCountValue(sellCount && sellCount.value); // get All Celebrities\n\n    let tempTokensList = [];\n    const web3 = props.drizzle.web3;\n\n    for (let i = 1; i < (props.tokensList && props.tokensList.value); i++) {\n      // starts from 1 index in contract\n      let tempTokenContract = new web3.eth.Contract(tokenContract.abi, props.tokensList && props.tokensList.value[i]);\n      let symbol = tempTokenContract.methods.symbol.call();\n      tempTokensList.push(symbol);\n      console.log(tempTokensList);\n    }\n\n    props.handleTokensList(tempTokensList);\n  }, [props.drizzleState.contracts.CelebrityExchange.buyOrderCount, props.drizzle.contracts.CelebrityExchange, props.buyOrderCount, props.drizzleState.contracts.CelebrityExchange.sellOrderCount, props.sellOrderCount, props.tokensList]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FetchContractData2, {\n      drizzle: props.drizzle,\n      drizzleState: props.drizzleState,\n      buyOrders: buyOrders,\n      buyCount: buyOrderCountValue,\n      handleBuyOrders: props.handleBuyOrders,\n      sellOrders: sellOrders,\n      sellCount: sellOrderCountValue,\n      handleSellOrders: props.handleSellOrders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n\n_s(FetchContractData1, \"uhST2rWNGy28CdTxHo0Jd1YyZXk=\");\n\n_c = FetchContractData1;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchContractData1\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/hocs/FetchContractData1.js"],"names":["React","useState","useEffect","FetchContractData2","tokenContract","FetchContractData1","props","buyOrders","setBuyOrders","id","buyOrderCountValue","setBuyOrderCountValue","sellOrders","setSellOrders","sellOrderCountValue","setSellOrderCountValue","buyCount","drizzleState","contracts","CelebrityExchange","buyOrderCount","tempBuyOrders","i","value","buyOrder","drizzle","methods","cacheCall","push","sellCount","sellOrderCount","tempSellOrders","sellOrder","tempTokensList","web3","tokensList","tempTokenContract","eth","Contract","abi","symbol","call","console","log","handleTokensList","handleBuyOrders","handleSellOrders"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FetchContractData2 from \"./FetchContractData2\";\nimport tokenContract from \"../contracts/CelebrityToken.json\";\n\nexport default function FetchContractData1(props) {\n\tconst [buyOrders, setBuyOrders] = useState([{ id: 0 }]);\n\tconst [buyOrderCountValue, setBuyOrderCountValue] = useState(0);\n\tconst [sellOrders, setSellOrders] = useState([{ id: 0 }]);\n\tconst [sellOrderCountValue, setSellOrderCountValue] = useState(0);\n\tuseEffect(() => {\n\t\tlet buyCount =\n\t\t\tprops.drizzleState.contracts.CelebrityExchange.buyOrderCount[\n\t\t\t\tprops.buyOrderCount\n\t\t\t];\n\t\tlet tempBuyOrders = [];\n\t\tfor (let i = 0; i < (buyCount && buyCount.value); i++) {\n\t\t\tlet buyOrder = props.drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"buyOrders\"\n\t\t\t].cacheCall(i);\n\t\t\ttempBuyOrders.push(buyOrder);\n\t\t}\n\t\tsetBuyOrders(tempBuyOrders);\n\t\tsetBuyOrderCountValue(buyCount && buyCount.value);\n\t\tlet sellCount =\n\t\t\tprops.drizzleState.contracts.CelebrityExchange.sellOrderCount[\n\t\t\t\tprops.sellOrderCount\n\t\t\t];\n\t\tlet tempSellOrders = [];\n\t\tfor (let i = 0; i < (sellCount && sellCount.value); i++) {\n\t\t\tlet sellOrder = props.drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"sellOrders\"\n\t\t\t].cacheCall(i);\n\t\t\ttempSellOrders.push(sellOrder);\n\t\t}\n\t\tsetSellOrders(tempSellOrders);\n\t\tsetSellOrderCountValue(sellCount && sellCount.value);\n\t\t// get All Celebrities\n\t\tlet tempTokensList = [];\n\t\tconst web3 = props.drizzle.web3;\n\n\t\tfor (let i = 1; i < (props.tokensList && props.tokensList.value); i++) {\n\t\t\t// starts from 1 index in contract\n\t\t\tlet tempTokenContract = new web3.eth.Contract(\n\t\t\t\ttokenContract.abi,\n\t\t\t\tprops.tokensList && props.tokensList.value[i]\n\t\t\t);\n\t\t\tlet symbol = tempTokenContract.methods.symbol.call();\n\t\t\ttempTokensList.push(symbol);\n\t\t\tconsole.log(tempTokensList);\n\t\t}\n\t\tprops.handleTokensList(tempTokensList);\n\t}, [\n\t\tprops.drizzleState.contracts.CelebrityExchange.buyOrderCount,\n\t\tprops.drizzle.contracts.CelebrityExchange,\n\t\tprops.buyOrderCount,\n\t\tprops.drizzleState.contracts.CelebrityExchange.sellOrderCount,\n\t\tprops.sellOrderCount,\n\t\tprops.tokensList,\n\t]);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<FetchContractData2\n\t\t\t\tdrizzle={props.drizzle}\n\t\t\t\tdrizzleState={props.drizzleState}\n\t\t\t\tbuyOrders={buyOrders}\n\t\t\t\tbuyCount={buyOrderCountValue}\n\t\t\t\thandleBuyOrders={props.handleBuyOrders}\n\t\t\t\tsellOrders={sellOrders}\n\t\t\t\tsellCount={sellOrderCountValue}\n\t\t\t\thandleSellOrders={props.handleSellOrders}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}