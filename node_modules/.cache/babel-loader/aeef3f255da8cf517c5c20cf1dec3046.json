{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/TokensList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Collapse } from \"antd\";\nimport { groupBy, mapValues } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport IndividualTokenDetail from \"./IndividualTokenDetail\";\nconst {\n  Meta\n} = Card;\nconst {\n  Panel\n} = Collapse;\n\nconst TokensList = props => {\n  _s();\n\n  const [tokenDetails, setTokenDetails] = useState();\n  useEffect(() => {\n    let tokensList = props.tokensList;\n    tokensList.map((token, index, array) => {\n      let details = token.name.split(/\\s*\\-\\s*/g);\n      array[index].playerName = details[2];\n      array[index].country = details[3];\n      array[index].DOB = details[4];\n      return true;\n    });\n\n    const nest = function (seq, keys) {\n      if (!keys.length) return seq;\n      var first = keys[0];\n      var rest = keys.slice(1);\n      return mapValues(groupBy(seq, first), function (value) {\n        return nest(value, rest);\n      });\n    };\n\n    tokensList = nest(tokensList, [\"vertical\", \"category\"]);\n    setTokenDetails(tokensList);\n  }, [props.tokensList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"tokensList\",\n      style: {\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: \"Celebrities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), typeof tokenDetails != \"undefined\" ? /*#__PURE__*/_jsxDEV(Collapse, {\n        defaultActiveKey: [\"0\"],\n        ghost: true,\n        children: Object.keys(tokenDetails).map((vertical, i) => {\n          return /*#__PURE__*/_jsxDEV(Panel, {\n            header: \"This is panel header 1\",\n            children: Object.keys(tokenDetails[vertical]).map((category, i) => {\n              let tokens = tokenDetails[vertical][category];\n              return /*#__PURE__*/_jsxDEV(Panel, {\n                header: \"This is panel header 1\",\n                children: tokens.map(token => {\n                  return /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/trade/${token.symbol}`,\n                    children: /*#__PURE__*/_jsxDEV(IndividualTokenDetail, {\n                      token: token,\n                      symbol: props.symbol\n                    }, token.address, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 16\n                    }, this)\n                  }, token.address, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 15\n                  }, this);\n                })\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 12\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TokensList, \"ml6FNlewLlNOPYs40JP27UCP2Kw=\");\n\n_c = TokensList;\nexport default TokensList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokensList\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/TokensList.js"],"names":["React","useState","useEffect","Card","Collapse","groupBy","mapValues","Link","IndividualTokenDetail","Meta","Panel","TokensList","props","tokenDetails","setTokenDetails","tokensList","map","token","index","array","details","name","split","playerName","country","DOB","nest","seq","keys","length","first","rest","slice","value","overflow","Object","vertical","i","category","tokens","symbol","address"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Collapse } from \"antd\";\nimport { groupBy, mapValues } from \"lodash\";\n\nimport { Link } from \"react-router-dom\";\n\nimport IndividualTokenDetail from \"./IndividualTokenDetail\";\n\nconst { Meta } = Card;\nconst { Panel } = Collapse;\n\nconst TokensList = (props) => {\n\tconst [tokenDetails, setTokenDetails] = useState();\n\tuseEffect(() => {\n\t\tlet tokensList = props.tokensList;\n\t\ttokensList.map((token, index, array) => {\n\t\t\tlet details = token.name.split(/\\s*\\-\\s*/g);\n\t\t\tarray[index].playerName = details[2];\n\t\t\tarray[index].country = details[3];\n\t\t\tarray[index].DOB = details[4];\n\t\t\treturn true;\n\t\t});\n\t\tconst nest = function (seq, keys) {\n\t\t\tif (!keys.length) return seq;\n\t\t\tvar first = keys[0];\n\t\t\tvar rest = keys.slice(1);\n\t\t\treturn mapValues(groupBy(seq, first), function (value) {\n\t\t\t\treturn nest(value, rest);\n\t\t\t});\n\t\t};\n\t\ttokensList = nest(tokensList, [\"vertical\", \"category\"]);\n\t\tsetTokenDetails(tokensList);\n\t}, [props.tokensList]);\n\treturn (\n\t\t<div>\n\t\t\t<Card className=\"tokensList\" style={{ overflow: \"auto\" }}>\n\t\t\t\t<Meta title=\"Celebrities\" />\n\t\t\t\t{typeof tokenDetails != \"undefined\" ? (\n\t\t\t\t\t<Collapse defaultActiveKey={[\"0\"]} ghost>\n\t\t\t\t\t\t{Object.keys(tokenDetails).map((vertical, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Panel header=\"This is panel header 1\" key={i}>\n\t\t\t\t\t\t\t\t\t{Object.keys(tokenDetails[vertical]).map((category, i) => {\n\t\t\t\t\t\t\t\t\t\tlet tokens = tokenDetails[vertical][category];\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Panel header=\"This is panel header 1\" key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t{tokens.map((token) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/trade/${token.symbol}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={token.address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IndividualTokenDetail\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={token.address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsymbol={props.symbol}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Collapse>\n\t\t\t\t) : null}\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default TokensList;\n"]},"metadata":{},"sourceType":"module"}