{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/BuyOrderBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SingleBuyOrder from \"./BuyOrderDetails\";\nexport default function BuyOrderBook(props) {\n  _s();\n\n  const [buyOrders, setBuyOrders] = useState([{\n    id: 0\n  }]);\n  const [buyOrderCountValue, setBuyOrderCountValue] = useState(0);\n  useEffect(() => {\n    let count = props.drizzleState.contracts.CelebrityExchange.buyOrderCount[props.buyOrderCount];\n    let tempBuyOrders = [];\n\n    for (let i = 0; i < (count && count.value); i++) {\n      let buyOrder = props.drizzle.contracts.CelebrityExchange.methods[\"buyOrders\"].cacheCall(i);\n      tempBuyOrders.push(buyOrder);\n    }\n\n    setBuyOrders(tempBuyOrders);\n    setBuyOrderCountValue(count && count.value);\n  }, [props.drizzleState.contracts.CelebrityExchange.buyOrderCount, props.drizzle.contracts.CelebrityExchange, props.buyOrderCount]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SingleBuyOrder, {\n      drizzle: props.drizzle,\n      drizzleState: props.drizzleState,\n      orders: buyOrders,\n      count: buyOrderCountValue,\n      handleBuyOrders: props.handleBuyOrders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BuyOrderBook, \"2HA4x0q8L4DMTJhSo2CFscoxhoU=\");\n\n_c = BuyOrderBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyOrderBook\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/BuyOrderBook.js"],"names":["React","useState","useEffect","SingleBuyOrder","BuyOrderBook","props","buyOrders","setBuyOrders","id","buyOrderCountValue","setBuyOrderCountValue","count","drizzleState","contracts","CelebrityExchange","buyOrderCount","tempBuyOrders","i","value","buyOrder","drizzle","methods","cacheCall","push","handleBuyOrders"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,EAAE,EAAE;AAAN,GAAD,CAAD,CAA1C;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,CAAD,CAA5D;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIS,KAAK,GACRN,KAAK,CAACO,YAAN,CAAmBC,SAAnB,CAA6BC,iBAA7B,CAA+CC,aAA/C,CACCV,KAAK,CAACU,aADP,CADD;AAIA,QAAIC,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,KAAK,IAAIA,KAAK,CAACO,KAAnB,CAAjB,EAA4CD,CAAC,EAA7C,EAAiD;AAChD,UAAIE,QAAQ,GAAGd,KAAK,CAACe,OAAN,CAAcP,SAAd,CAAwBC,iBAAxB,CAA0CO,OAA1C,CACd,WADc,EAEbC,SAFa,CAEHL,CAFG,CAAf;AAGAD,MAAAA,aAAa,CAACO,IAAd,CAAmBJ,QAAnB;AACA;;AACDZ,IAAAA,YAAY,CAACS,aAAD,CAAZ;AACAN,IAAAA,qBAAqB,CAACC,KAAK,IAAIA,KAAK,CAACO,KAAhB,CAArB;AACA,GAdQ,EAcN,CACFb,KAAK,CAACO,YAAN,CAAmBC,SAAnB,CAA6BC,iBAA7B,CAA+CC,aAD7C,EAEFV,KAAK,CAACe,OAAN,CAAcP,SAAd,CAAwBC,iBAFtB,EAGFT,KAAK,CAACU,aAHJ,CAdM,CAAT;AAmBA,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,2BACC,QAAC,cAAD;AACC,MAAA,OAAO,EAAEV,KAAK,CAACe,OADhB;AAEC,MAAA,YAAY,EAAEf,KAAK,CAACO,YAFrB;AAGC,MAAA,MAAM,EAAEN,SAHT;AAIC,MAAA,KAAK,EAAEG,kBAJR;AAKC,MAAA,eAAe,EAAEJ,KAAK,CAACmB;AALxB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GAjCuBpB,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SingleBuyOrder from \"./BuyOrderDetails\";\n\nexport default function BuyOrderBook(props) {\n\tconst [buyOrders, setBuyOrders] = useState([{ id: 0 }]);\n\tconst [buyOrderCountValue, setBuyOrderCountValue] = useState(0);\n\tuseEffect(() => {\n\t\tlet count =\n\t\t\tprops.drizzleState.contracts.CelebrityExchange.buyOrderCount[\n\t\t\t\tprops.buyOrderCount\n\t\t\t];\n\t\tlet tempBuyOrders = [];\n\t\tfor (let i = 0; i < (count && count.value); i++) {\n\t\t\tlet buyOrder = props.drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"buyOrders\"\n\t\t\t].cacheCall(i);\n\t\t\ttempBuyOrders.push(buyOrder);\n\t\t}\n\t\tsetBuyOrders(tempBuyOrders);\n\t\tsetBuyOrderCountValue(count && count.value);\n\t}, [\n\t\tprops.drizzleState.contracts.CelebrityExchange.buyOrderCount,\n\t\tprops.drizzle.contracts.CelebrityExchange,\n\t\tprops.buyOrderCount,\n\t]);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<SingleBuyOrder\n\t\t\t\tdrizzle={props.drizzle}\n\t\t\t\tdrizzleState={props.drizzleState}\n\t\t\t\torders={buyOrders}\n\t\t\t\tcount={buyOrderCountValue}\n\t\t\t\thandleBuyOrders={props.handleBuyOrders}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}