{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/BuyOrderBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport SingleBuyOrder from \"./SingleBuyOrder\"; // class BuyOrderBook extends Component {\n// \tstate = { loading: false, buyOrders: [], count: this.props.count };\n// \tstatic getDerivedStateFromProps(props, state) {\n// \t\tconst { drizzle, drizzleState } = props;\n// \t\tconst { CelebrityExchange } = drizzleState.contracts;\n// \t\tlet buyOrders = [];\n// \t\tconsole.log(props.count);\n// \t\tfor (let i = 0; i < props.count; i++) {\n// \t\t\tconsole.log(i);\n// \t\t\tlet buyOrder = drizzle.contracts.CelebrityExchange.methods[\n// \t\t\t\t\"buyOrders\"\n// \t\t\t].cacheCall(i);\n// \t\t\tconsole.log(buyOrder);\n// \t\t\tbuyOrders.push(buyOrder);\n// \t\t\tconsole.log(buyOrders);\n// \t\t}\n// \t\treturn {\n// \t\t\tloading: true,\n// \t\t\tbuyOrders: buyOrders,\n// \t\t\tcount: props.count,\n// \t\t};\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t{/* {typeof this.state.buyOrders[0] != \"undefined\"\n// \t\t\t\t\t? this.state.buyOrders.map((order) => {\n// \t\t\t\t\t\t\tconsole.log(order);\n// \t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t// <SingleBuyOrder\n// \t\t\t\t\t\t\t\t// \tdrizzle={this.props.drizzle}\n// \t\t\t\t\t\t\t\t// \tdrizzleState={this.props.drizzleState}\n// \t\t\t\t\t\t\t\t// \tkey={order}\n// \t\t\t\t\t\t\t\t// \torder={order}\n// \t\t\t\t\t\t\t\t// />\n// \t\t\t\t\t\t\t\t<div>Hi</div>\n// \t\t\t\t\t\t\t);\n// \t\t\t\t\t  })\n// \t\t\t\t\t: \"Loading\"} */}\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\nexport default function BuyOrderBook(props) {\n  _s();\n\n  const [buyOrders, setBuyOrders] = useState([{\n    id: 0\n  }]);\n  useEffect(() => {\n    const {\n      drizzle,\n      drizzleState\n    } = props;\n    let buyOrders = [];\n\n    for (let i = 0; i < props.buyOrderCount; i++) {\n      let buyOrder = drizzle.contracts.CelebrityExchange.methods[\"buyOrders\"].cacheCall(i);\n      buyOrders.push(buyOrder);\n    }\n\n    handleStatusChange(buyOrders);\n  }, [props, buyOrders]);\n\n  function handleStatusChange(_buyOrders) {\n    setBuyOrders(_buyOrders);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: buyOrders.map(order => {\n      /*#__PURE__*/\n      _jsxDEV(SingleBuyOrder, {\n        drizzle: props.drizzle,\n        drizzleState: props.drizzleState,\n        order: order\n      }, order, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BuyOrderBook, \"05LhXT1IR/5tzcYvzoUfO8crcYk=\");\n\n_c = BuyOrderBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyOrderBook\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/BuyOrderBook.js"],"names":["React","Component","useState","useEffect","SingleBuyOrder","BuyOrderBook","props","buyOrders","setBuyOrders","id","drizzle","drizzleState","i","buyOrderCount","buyOrder","contracts","CelebrityExchange","methods","cacheCall","push","handleStatusChange","_buyOrders","map","order"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,EAAE,EAAE;AAAN,GAAD,CAAD,CAA1C;AACAN,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM;AAAEO,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4BL,KAAlC;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,aAA1B,EAAyCD,CAAC,EAA1C,EAA8C;AAC7C,UAAIE,QAAQ,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,iBAAlB,CAAoCC,OAApC,CACd,WADc,EAEbC,SAFa,CAEHN,CAFG,CAAf;AAGAL,MAAAA,SAAS,CAACY,IAAV,CAAeL,QAAf;AACA;;AACDM,IAAAA,kBAAkB,CAACb,SAAD,CAAlB;AACA,GAVQ,EAUN,CAACD,KAAD,EAAQC,SAAR,CAVM,CAAT;;AAWA,WAASa,kBAAT,CAA4BC,UAA5B,EAAwC;AACvCb,IAAAA,YAAY,CAACa,UAAD,CAAZ;AACA;;AACD,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,cACEd,SAAS,CAACe,GAAV,CAAeC,KAAD,IAAW;AACzB;AAAA,cAAC,cAAD;AACC,QAAA,OAAO,EAAEjB,KAAK,CAACI,OADhB;AAEC,QAAA,YAAY,EAAEJ,KAAK,CAACK,YAFrB;AAIC,QAAA,KAAK,EAAEY;AAJR,SAGMA,KAHN;AAAA;AAAA;AAAA;AAAA;AAMA,KAPA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GA5BuBlB,Y;;KAAAA,Y","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport SingleBuyOrder from \"./SingleBuyOrder\";\n\n// class BuyOrderBook extends Component {\n// \tstate = { loading: false, buyOrders: [], count: this.props.count };\n// \tstatic getDerivedStateFromProps(props, state) {\n// \t\tconst { drizzle, drizzleState } = props;\n// \t\tconst { CelebrityExchange } = drizzleState.contracts;\n\n// \t\tlet buyOrders = [];\n// \t\tconsole.log(props.count);\n// \t\tfor (let i = 0; i < props.count; i++) {\n// \t\t\tconsole.log(i);\n// \t\t\tlet buyOrder = drizzle.contracts.CelebrityExchange.methods[\n// \t\t\t\t\"buyOrders\"\n// \t\t\t].cacheCall(i);\n// \t\t\tconsole.log(buyOrder);\n// \t\t\tbuyOrders.push(buyOrder);\n// \t\t\tconsole.log(buyOrders);\n// \t\t}\n\n// \t\treturn {\n// \t\t\tloading: true,\n// \t\t\tbuyOrders: buyOrders,\n// \t\t\tcount: props.count,\n// \t\t};\n// \t}\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t{/* {typeof this.state.buyOrders[0] != \"undefined\"\n// \t\t\t\t\t? this.state.buyOrders.map((order) => {\n// \t\t\t\t\t\t\tconsole.log(order);\n// \t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t// <SingleBuyOrder\n// \t\t\t\t\t\t\t\t// \tdrizzle={this.props.drizzle}\n// \t\t\t\t\t\t\t\t// \tdrizzleState={this.props.drizzleState}\n// \t\t\t\t\t\t\t\t// \tkey={order}\n// \t\t\t\t\t\t\t\t// \torder={order}\n// \t\t\t\t\t\t\t\t// />\n// \t\t\t\t\t\t\t\t<div>Hi</div>\n// \t\t\t\t\t\t\t);\n// \t\t\t\t\t  })\n// \t\t\t\t\t: \"Loading\"} */}\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\nexport default function BuyOrderBook(props) {\n\tconst [buyOrders, setBuyOrders] = useState([{ id: 0 }]);\n\tuseEffect(() => {\n\t\tconst { drizzle, drizzleState } = props;\n\t\tlet buyOrders = [];\n\t\tfor (let i = 0; i < props.buyOrderCount; i++) {\n\t\t\tlet buyOrder = drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"buyOrders\"\n\t\t\t].cacheCall(i);\n\t\t\tbuyOrders.push(buyOrder);\n\t\t}\n\t\thandleStatusChange(buyOrders);\n\t}, [props, buyOrders]);\n\tfunction handleStatusChange(_buyOrders) {\n\t\tsetBuyOrders(_buyOrders);\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{buyOrders.map((order) => {\n\t\t\t\t<SingleBuyOrder\n\t\t\t\t\tdrizzle={props.drizzle}\n\t\t\t\t\tdrizzleState={props.drizzleState}\n\t\t\t\t\tkey={order}\n\t\t\t\t\torder={order}\n\t\t\t\t/>;\n\t\t\t})}\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}