{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/BuyOrderBook.js\";\nimport React, { Component } from \"react\";\nimport SingleBuyOrder from \"./SingleBuyOrder\";\n\nclass BuyOrderBook extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const {\n      CelebrityExchange\n    } = drizzleState.contracts;\n    const count = CelebrityExchange.buyOrderCount[props.count];\n    let buyOrders = [];\n\n    for (let i = 0; i < (count && count.value); i++) {\n      let buyOrder = drizzle.contracts.CelebrityExchange.methods[\"buyOrders\"].cacheCall(i);\n      buyOrders.push(buyOrder);\n    }\n\n    this.state = {\n      loading: true,\n      buyOrderCount: count && count.value,\n      buyOrders: buyOrders\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      CelebrityExchange\n    } = props.drizzleState.contracts;\n    const count = CelebrityExchange.buyOrderCount[props.count];\n    let buyOrdersArray = [];\n\n    for (let i = 0; i < (count && count.value); i++) {\n      let tempOrder = CelebrityExchange.buyOrders[props.buyOrders[i]];\n      tempOrder = tempOrder && tempOrder.value;\n      buyOrdersArray.push(tempOrder);\n    }\n\n    if (buyOrdersArray !== []) {\n      return {\n        buyOrdersArray: buyOrdersArray,\n        loading: false\n      };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: typeof this.state.buyOrders[0] != \"undefined\" ? this.state.buyOrders.map(order => {\n        return /*#__PURE__*/_jsxDEV(SingleBuyOrder, {\n          order: order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this);\n      }) : \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default BuyOrderBook;","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/BuyOrderBook.js"],"names":["React","Component","SingleBuyOrder","BuyOrderBook","constructor","props","drizzle","drizzleState","CelebrityExchange","contracts","count","buyOrderCount","buyOrders","i","value","buyOrder","methods","cacheCall","push","state","loading","getDerivedStateFromProps","buyOrdersArray","tempOrder","render","map","order"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA4B,KAAKF,KAAvC;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAwBD,YAAY,CAACE,SAA3C;AAEA,UAAMC,KAAK,GAAGF,iBAAiB,CAACG,aAAlB,CAAgCN,KAAK,CAACK,KAAtC,CAAd;AAEA,QAAIE,SAAS,GAAG,EAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,KAAK,IAAIA,KAAK,CAACI,KAAnB,CAAjB,EAA4CD,CAAC,EAA7C,EAAiD;AAChD,UAAIE,QAAQ,GAAGT,OAAO,CAACG,SAAR,CAAkBD,iBAAlB,CAAoCQ,OAApC,CACd,WADc,EAEbC,SAFa,CAEHJ,CAFG,CAAf;AAIAD,MAAAA,SAAS,CAACM,IAAV,CAAeH,QAAf;AACA;;AAED,SAAKI,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,IADG;AAEZT,MAAAA,aAAa,EAAED,KAAK,IAAIA,KAAK,CAACI,KAFlB;AAGZF,MAAAA,SAAS,EAAEA;AAHC,KAAb;AAKA;;AAED,SAAOS,wBAAP,CAAgChB,KAAhC,EAAuCc,KAAvC,EAA8C;AAC7C,UAAM;AAAEX,MAAAA;AAAF,QAAwBH,KAAK,CAACE,YAAN,CAAmBE,SAAjD;AAEA,UAAMC,KAAK,GAAGF,iBAAiB,CAACG,aAAlB,CAAgCN,KAAK,CAACK,KAAtC,CAAd;AACA,QAAIY,cAAc,GAAG,EAArB;;AAEA,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,KAAK,IAAIA,KAAK,CAACI,KAAnB,CAAjB,EAA4CD,CAAC,EAA7C,EAAiD;AAChD,UAAIU,SAAS,GAAGf,iBAAiB,CAACI,SAAlB,CAA4BP,KAAK,CAACO,SAAN,CAAgBC,CAAhB,CAA5B,CAAhB;AACAU,MAAAA,SAAS,GAAGA,SAAS,IAAIA,SAAS,CAACT,KAAnC;AAEAQ,MAAAA,cAAc,CAACJ,IAAf,CAAoBK,SAApB;AACA;;AACD,QAAID,cAAc,KAAK,EAAvB,EAA2B;AAC1B,aAAO;AAAEA,QAAAA,cAAc,EAAEA,cAAlB;AAAkCF,QAAAA,OAAO,EAAE;AAA3C,OAAP;AACA;AACD;;AACDI,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,gBACE,OAAO,KAAKL,KAAL,CAAWP,SAAX,CAAqB,CAArB,CAAP,IAAkC,WAAlC,GACE,KAAKO,KAAL,CAAWP,SAAX,CAAqBa,GAArB,CAA0BC,KAAD,IAAW;AACpC,4BAAO,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACC,OAFD,CADF,GAIE;AALJ;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAnDmC;;AAqDrC,eAAevB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport SingleBuyOrder from \"./SingleBuyOrder\";\n\nclass BuyOrderBook extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst { drizzle, drizzleState } = this.props;\n\t\tconst { CelebrityExchange } = drizzleState.contracts;\n\n\t\tconst count = CelebrityExchange.buyOrderCount[props.count];\n\n\t\tlet buyOrders = [];\n\n\t\tfor (let i = 0; i < (count && count.value); i++) {\n\t\t\tlet buyOrder = drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"buyOrders\"\n\t\t\t].cacheCall(i);\n\n\t\t\tbuyOrders.push(buyOrder);\n\t\t}\n\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tbuyOrderCount: count && count.value,\n\t\t\tbuyOrders: buyOrders,\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\tconst { CelebrityExchange } = props.drizzleState.contracts;\n\n\t\tconst count = CelebrityExchange.buyOrderCount[props.count];\n\t\tlet buyOrdersArray = [];\n\n\t\tfor (let i = 0; i < (count && count.value); i++) {\n\t\t\tlet tempOrder = CelebrityExchange.buyOrders[props.buyOrders[i]];\n\t\t\ttempOrder = tempOrder && tempOrder.value;\n\n\t\t\tbuyOrdersArray.push(tempOrder);\n\t\t}\n\t\tif (buyOrdersArray !== []) {\n\t\t\treturn { buyOrdersArray: buyOrdersArray, loading: false };\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{typeof this.state.buyOrders[0] != \"undefined\"\n\t\t\t\t\t? this.state.buyOrders.map((order) => {\n\t\t\t\t\t\t\treturn <SingleBuyOrder order={order} />;\n\t\t\t\t\t  })\n\t\t\t\t\t: \"Loading\"}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default BuyOrderBook;\n"]},"metadata":{},"sourceType":"module"}