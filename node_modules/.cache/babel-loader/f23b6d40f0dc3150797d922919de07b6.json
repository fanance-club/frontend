{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/SellOrderBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SingleSellOrder from \"./SellOrderDetails\";\nexport default function SellOrderBook(props) {\n  _s();\n\n  const [sellOrders, setSellOrders] = useState([{\n    id: 0\n  }]);\n  const [sellOrderCountValue, setSellOrderCountValue] = useState(0);\n  useEffect(() => {\n    let count = props.drizzleState.contracts.CelebrityExchange.sellOrderCount[props.sellOrderCount];\n    let tempSellOrders = [];\n\n    for (let i = 0; i < (count && count.value); i++) {\n      let sellOrder = props.drizzle.contracts.CelebrityExchange.methods[\"sellOrders\"].cacheCall(i);\n      tempSellOrders.push(sellOrder);\n    }\n\n    setSellOrders(tempSellOrders);\n    setSellOrderCountValue(count && count.value);\n  }, [props.drizzleState.contracts.CelebrityExchange.sellOrderCount, props.drizzle.contracts.CelebrityExchange, props.sellOrderCount]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SingleSellOrder, {\n      drizzle: props.drizzle,\n      drizzleState: props.drizzleState,\n      orders: sellOrders,\n      count: sellOrderCountValue,\n      handleSellOrders: props.handleSellOrders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SellOrderBook, \"O4gcH+vB53ncFY+DRU5BDuvM8p4=\");\n\n_c = SellOrderBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellOrderBook\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/SellOrderBook.js"],"names":["React","useState","useEffect","SingleSellOrder","SellOrderBook","props","sellOrders","setSellOrders","id","sellOrderCountValue","setSellOrderCountValue","count","drizzleState","contracts","CelebrityExchange","sellOrderCount","tempSellOrders","i","value","sellOrder","drizzle","methods","cacheCall","push","handleSellOrders"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,EAAE,EAAE;AAAN,GAAD,CAAD,CAA5C;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,CAAD,CAA9D;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIS,KAAK,GACRN,KAAK,CAACO,YAAN,CAAmBC,SAAnB,CAA6BC,iBAA7B,CAA+CC,cAA/C,CACCV,KAAK,CAACU,cADP,CADD;AAIA,QAAIC,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,KAAK,IAAIA,KAAK,CAACO,KAAnB,CAAjB,EAA4CD,CAAC,EAA7C,EAAiD;AAChD,UAAIE,SAAS,GAAGd,KAAK,CAACe,OAAN,CAAcP,SAAd,CAAwBC,iBAAxB,CAA0CO,OAA1C,CACf,YADe,EAEdC,SAFc,CAEJL,CAFI,CAAhB;AAGAD,MAAAA,cAAc,CAACO,IAAf,CAAoBJ,SAApB;AACA;;AACDZ,IAAAA,aAAa,CAACS,cAAD,CAAb;AACAN,IAAAA,sBAAsB,CAACC,KAAK,IAAIA,KAAK,CAACO,KAAhB,CAAtB;AACA,GAdQ,EAcN,CACFb,KAAK,CAACO,YAAN,CAAmBC,SAAnB,CAA6BC,iBAA7B,CAA+CC,cAD7C,EAEFV,KAAK,CAACe,OAAN,CAAcP,SAAd,CAAwBC,iBAFtB,EAGFT,KAAK,CAACU,cAHJ,CAdM,CAAT;AAmBA,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,2BACC,QAAC,eAAD;AACC,MAAA,OAAO,EAAEV,KAAK,CAACe,OADhB;AAEC,MAAA,YAAY,EAAEf,KAAK,CAACO,YAFrB;AAGC,MAAA,MAAM,EAAEN,UAHT;AAIC,MAAA,KAAK,EAAEG,mBAJR;AAKC,MAAA,gBAAgB,EAAEJ,KAAK,CAACmB;AALzB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GAjCuBpB,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SingleSellOrder from \"./SellOrderDetails\";\n\nexport default function SellOrderBook(props) {\n\tconst [sellOrders, setSellOrders] = useState([{ id: 0 }]);\n\tconst [sellOrderCountValue, setSellOrderCountValue] = useState(0);\n\tuseEffect(() => {\n\t\tlet count =\n\t\t\tprops.drizzleState.contracts.CelebrityExchange.sellOrderCount[\n\t\t\t\tprops.sellOrderCount\n\t\t\t];\n\t\tlet tempSellOrders = [];\n\t\tfor (let i = 0; i < (count && count.value); i++) {\n\t\t\tlet sellOrder = props.drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"sellOrders\"\n\t\t\t].cacheCall(i);\n\t\t\ttempSellOrders.push(sellOrder);\n\t\t}\n\t\tsetSellOrders(tempSellOrders);\n\t\tsetSellOrderCountValue(count && count.value);\n\t}, [\n\t\tprops.drizzleState.contracts.CelebrityExchange.sellOrderCount,\n\t\tprops.drizzle.contracts.CelebrityExchange,\n\t\tprops.sellOrderCount,\n\t]);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<SingleSellOrder\n\t\t\t\tdrizzle={props.drizzle}\n\t\t\t\tdrizzleState={props.drizzleState}\n\t\t\t\torders={sellOrders}\n\t\t\t\tcount={sellOrderCountValue}\n\t\t\t\thandleSellOrders={props.handleSellOrders}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}