{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/hocs/FetchContractData1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FetchContractData2 from \"./FetchContractData2\";\nimport tokenContract from \"../contracts/CelebrityToken.json\";\nexport default function FetchContractData1(props) {\n  _s();\n\n  const [buyOrders, setBuyOrders] = useState([{\n    id: 0\n  }]);\n  const [buyOrderCountValue, setBuyOrderCountValue] = useState(0);\n  const [sellOrders, setSellOrders] = useState([{\n    id: 0\n  }]);\n  const [sellOrderCountValue, setSellOrderCountValue] = useState(0);\n  const [tokensList, setTokensList] = useState([{}]);\n  const [latestPrice, setLatestPrice] = useState([{}]);\n  useEffect(() => {\n    let buyCount = props.drizzleState.contracts.CelebrityExchange.buyOrderCount[props.buyOrderCount];\n    let tempBuyOrders = [];\n\n    for (let i = 0; i < (buyCount && buyCount.value); i++) {\n      let buyOrder = props.drizzle.contracts.CelebrityExchange.methods[\"buyOrders\"].cacheCall(i);\n      tempBuyOrders.push(buyOrder);\n    }\n\n    setBuyOrders(tempBuyOrders);\n    setBuyOrderCountValue(buyCount && buyCount.value);\n    let sellCount = props.drizzleState.contracts.CelebrityExchange.sellOrderCount[props.sellOrderCount];\n    let tempSellOrders = [];\n\n    for (let i = 0; i < (sellCount && sellCount.value); i++) {\n      let sellOrder = props.drizzle.contracts.CelebrityExchange.methods[\"sellOrders\"].cacheCall(i);\n      tempSellOrders.push(sellOrder);\n    }\n\n    setSellOrders(tempSellOrders);\n    setSellOrderCountValue(sellCount && sellCount.value); // get All Celebrities\n\n    async function getAllCelebrities() {\n      let tempTokensList = [];\n      let tempLatestprice = {};\n      const web3 = props.drizzle.web3;\n      let tokenCount = props.drizzleState.contracts.TokenGenerator.getAllCelebrities[props.tokensList];\n\n      for (let i = 1; i < (tokenCount && tokenCount.value.length); i++) {\n        // starts from 1 index in contract\n        let tempTokenContract = new web3.eth.Contract(tokenContract.abi, tokenCount && tokenCount.value[i]);\n        let symbol = await tempTokenContract.methods.symbol().call();\n        let vertical = await tempTokenContract.methods.vertical().call();\n        let id = await tempTokenContract.methods.id().call();\n        let name = await tempTokenContract.methods.name().call();\n        let category = await tempTokenContract.methods.category().call();\n\n        if (await tempTokenContract.methods.isTradingAllowedOnCelebrityExchange().call()) {\n          let address = tokenCount && tokenCount.value[i];\n          tempTokensList.push({\n            address: address,\n            id: id,\n            symbol: symbol,\n            name: name,\n            vertical: vertical,\n            category: category\n          });\n          tempLatestprice.push(await props.drizzle.contracts.CelebrityExchange.methods[\"latestPrice\"].cacheCall(tokenCount && tokenCount.value[i]));\n        }\n      }\n\n      setLatestPrice(tempLatestprice);\n      setTokensList(tempTokensList);\n      props.handleTokensList(tempTokensList);\n    }\n\n    getAllCelebrities();\n  }, [props.drizzleState.contracts.CelebrityExchange.buyOrderCount, props.drizzle.contracts.CelebrityExchange, props.buyOrderCount, props.drizzleState.contracts.CelebrityExchange.sellOrderCount, props.sellOrderCount, props.tokensList, props.drizzleState.contracts.TokenGenerator]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FetchContractData2, {\n      drizzle: props.drizzle,\n      drizzleState: props.drizzleState,\n      buyOrders: buyOrders,\n      buyCount: buyOrderCountValue,\n      handleBuyOrders: props.handleBuyOrders,\n      sellOrders: sellOrders,\n      sellCount: sellOrderCountValue,\n      handleSellOrders: props.handleSellOrders,\n      tokensList: tokensList,\n      handleLatestPrice: props.handleLatestPrice,\n      latestPrice: latestPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n}\n\n_s(FetchContractData1, \"jC8EgLrg3feSpdX7jVtc2cB01H8=\");\n\n_c = FetchContractData1;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchContractData1\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/hocs/FetchContractData1.js"],"names":["React","useState","useEffect","FetchContractData2","tokenContract","FetchContractData1","props","buyOrders","setBuyOrders","id","buyOrderCountValue","setBuyOrderCountValue","sellOrders","setSellOrders","sellOrderCountValue","setSellOrderCountValue","tokensList","setTokensList","latestPrice","setLatestPrice","buyCount","drizzleState","contracts","CelebrityExchange","buyOrderCount","tempBuyOrders","i","value","buyOrder","drizzle","methods","cacheCall","push","sellCount","sellOrderCount","tempSellOrders","sellOrder","getAllCelebrities","tempTokensList","tempLatestprice","web3","tokenCount","TokenGenerator","length","tempTokenContract","eth","Contract","abi","symbol","call","vertical","name","category","isTradingAllowedOnCelebrityExchange","address","handleTokensList","handleBuyOrders","handleSellOrders","handleLatestPrice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FetchContractData2 from \"./FetchContractData2\";\nimport tokenContract from \"../contracts/CelebrityToken.json\";\n\nexport default function FetchContractData1(props) {\n\tconst [buyOrders, setBuyOrders] = useState([{ id: 0 }]);\n\tconst [buyOrderCountValue, setBuyOrderCountValue] = useState(0);\n\tconst [sellOrders, setSellOrders] = useState([{ id: 0 }]);\n\tconst [sellOrderCountValue, setSellOrderCountValue] = useState(0);\n\tconst [tokensList, setTokensList] = useState([{}]);\n\tconst [latestPrice, setLatestPrice] = useState([{}]);\n\tuseEffect(() => {\n\t\tlet buyCount =\n\t\t\tprops.drizzleState.contracts.CelebrityExchange.buyOrderCount[\n\t\t\t\tprops.buyOrderCount\n\t\t\t];\n\t\tlet tempBuyOrders = [];\n\t\tfor (let i = 0; i < (buyCount && buyCount.value); i++) {\n\t\t\tlet buyOrder = props.drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"buyOrders\"\n\t\t\t].cacheCall(i);\n\t\t\ttempBuyOrders.push(buyOrder);\n\t\t}\n\t\tsetBuyOrders(tempBuyOrders);\n\t\tsetBuyOrderCountValue(buyCount && buyCount.value);\n\t\tlet sellCount =\n\t\t\tprops.drizzleState.contracts.CelebrityExchange.sellOrderCount[\n\t\t\t\tprops.sellOrderCount\n\t\t\t];\n\t\tlet tempSellOrders = [];\n\t\tfor (let i = 0; i < (sellCount && sellCount.value); i++) {\n\t\t\tlet sellOrder = props.drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\"sellOrders\"\n\t\t\t].cacheCall(i);\n\t\t\ttempSellOrders.push(sellOrder);\n\t\t}\n\t\tsetSellOrders(tempSellOrders);\n\t\tsetSellOrderCountValue(sellCount && sellCount.value);\n\t\t// get All Celebrities\n\t\tasync function getAllCelebrities() {\n\t\t\tlet tempTokensList = [];\n\t\t\tlet tempLatestprice = {};\n\t\t\tconst web3 = props.drizzle.web3;\n\t\t\tlet tokenCount =\n\t\t\t\tprops.drizzleState.contracts.TokenGenerator.getAllCelebrities[\n\t\t\t\t\tprops.tokensList\n\t\t\t\t];\n\n\t\t\tfor (let i = 1; i < (tokenCount && tokenCount.value.length); i++) {\n\t\t\t\t// starts from 1 index in contract\n\t\t\t\tlet tempTokenContract = new web3.eth.Contract(\n\t\t\t\t\ttokenContract.abi,\n\t\t\t\t\ttokenCount && tokenCount.value[i]\n\t\t\t\t);\n\t\t\t\tlet symbol = await tempTokenContract.methods.symbol().call();\n\t\t\t\tlet vertical = await tempTokenContract.methods.vertical().call();\n\t\t\t\tlet id = await tempTokenContract.methods.id().call();\n\t\t\t\tlet name = await tempTokenContract.methods.name().call();\n\t\t\t\tlet category = await tempTokenContract.methods.category().call();\n\t\t\t\tif (\n\t\t\t\t\tawait tempTokenContract.methods\n\t\t\t\t\t\t.isTradingAllowedOnCelebrityExchange()\n\t\t\t\t\t\t.call()\n\t\t\t\t) {\n\t\t\t\t\tlet address = tokenCount && tokenCount.value[i];\n\t\t\t\t\ttempTokensList.push({\n\t\t\t\t\t\taddress: address,\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tsymbol: symbol,\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tvertical: vertical,\n\t\t\t\t\t\tcategory: category,\n\t\t\t\t\t});\n\t\t\t\t\ttempLatestprice.push(\n\t\t\t\t\t\tawait props.drizzle.contracts.CelebrityExchange.methods[\n\t\t\t\t\t\t\t\"latestPrice\"\n\t\t\t\t\t\t].cacheCall(tokenCount && tokenCount.value[i])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetLatestPrice(tempLatestprice);\n\t\t\tsetTokensList(tempTokensList);\n\t\t\tprops.handleTokensList(tempTokensList);\n\t\t}\n\t\tgetAllCelebrities();\n\t}, [\n\t\tprops.drizzleState.contracts.CelebrityExchange.buyOrderCount,\n\t\tprops.drizzle.contracts.CelebrityExchange,\n\t\tprops.buyOrderCount,\n\t\tprops.drizzleState.contracts.CelebrityExchange.sellOrderCount,\n\t\tprops.sellOrderCount,\n\t\tprops.tokensList,\n\t\tprops.drizzleState.contracts.TokenGenerator,\n\t]);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<FetchContractData2\n\t\t\t\tdrizzle={props.drizzle}\n\t\t\t\tdrizzleState={props.drizzleState}\n\t\t\t\tbuyOrders={buyOrders}\n\t\t\t\tbuyCount={buyOrderCountValue}\n\t\t\t\thandleBuyOrders={props.handleBuyOrders}\n\t\t\t\tsellOrders={sellOrders}\n\t\t\t\tsellCount={sellOrderCountValue}\n\t\t\t\thandleSellOrders={props.handleSellOrders}\n\t\t\t\ttokensList={tokensList}\n\t\t\t\thandleLatestPrice={props.handleLatestPrice}\n\t\t\t\tlatestPrice={latestPrice}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}