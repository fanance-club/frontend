{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/PlaceOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Input, Button, Form } from \"antd\";\nimport BuyOrderBook from \"./BuyOrderBook\";\nconst layout = {\n  labelCol: {\n    span: 0\n  },\n  wrapperCol: {\n    offset: 2,\n    span: 20\n  }\n};\nexport default function PlaceOrders(props) {\n  _s();\n\n  const [stackId, setStackId] = useState(null);\n  const [buyFocused, setBuyFocus] = useState(\"BUY\");\n  const [focusBorderTop, setFocusBorderTop] = useState(\"5px solid #55bd6c !important\");\n  useEffect(() => {\n    setBuyFocus(buyFocused);\n    buyFocused == \"BUY\" ? setFocusBorderTop(\"5px solid #55bd6c !important\") : setFocusBorderTop(\"5px solid #f1432f !important\");\n  }, [buyFocused]);\n\n  const changeStatus = e => {\n    setBuyFocus(e.target.value);\n    buyFocused == \"BUY\" ? setFocusBorderTop(\"5px solid #55bd6c !important\") : setFocusBorderTop(\"5px solid #f1432f !important\");\n  };\n\n  const submitOrder = async e => {\n    const _price = document.getElementById(\"price\").value;\n    const _amount = document.getElementById(\"amount\").value;\n    const _total = document.getElementById(\"total\").value;\n    const {\n      drizzle,\n      drizzleState\n    } = props;\n    const contract = drizzle.contracts.CelebrityExchange; // get the transaction states from the drizzle state\n    // let drizzle know we want to call the `set` method with `value`\n\n    const stackId = await contract.methods.placeBuyOrder.cacheSend(\"0xDD1BcCD8da45D24823a85B5841Aa9861Cc8df301\", drizzle.web3.utils.toWei(_amount), drizzle.web3.utils.toWei(_total), drizzle.web3.utils.toWei(_total) / 100, false, {\n      from: drizzleState.accounts[0]\n    });\n    setStackId(stackId);\n  };\n\n  const getTxStatus = () => {\n    const {\n      transactions,\n      transactionStack\n    } = props.drizzleState; // get the transaction hash using our saved `stackId`\n\n    if (transactionStack[stackId]) {\n      const txHash = transactionStack[stackId];\n      return transactions[txHash] && transactions[txHash].status;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"5px\",\n        zIndex: \"5\",\n        left: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"BUY\",\n        name: \"buyFocus\",\n        value: \"BUY\",\n        onClick: value => changeStatus(value),\n        checked: buyFocused == \"BUY\" ? true : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"BUY\",\n        style: {\n          borderTop: \"5px solid #55bd6c !important\"\n        },\n        children: \"BUY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"SELL\",\n        name: \"buyFocus\",\n        value: \"SELL\",\n        onClick: value => changeStatus(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"SELL\",\n        style: {\n          borderTop: {\n            focusBorderTop\n          }\n        },\n        children: \"SELL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"placeOrders\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          position: \"absolute\",\n          top: \"70px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form, { ...layout,\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"price\",\n            id: \"price\",\n            label: \"PRICE\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              addonBefore: \"PRICE\",\n              suffix: \"ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"amount\",\n            label: \"AMOUNT\",\n            id: \"price\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              addonBefore: \"AMOUNT\",\n              suffix: \"TOKENS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"total\",\n            label: \"TOTAL\",\n            id: \"total\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              addonBefore: \"TOTAL\",\n              suffix: \"ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: () => submitOrder(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getTxStatus()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\n_s(PlaceOrders, \"2kEO1Rbqj5l4Ta64k0NLUz5bXNw=\");\n\n_c = PlaceOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceOrders\");","map":{"version":3,"sources":["/Users/raghu/Fanance/fanance-dapp/app/frontend/src/containers/CelebrityExchange/PlaceOrders.js"],"names":["React","useState","useEffect","Card","Input","Button","Form","BuyOrderBook","layout","labelCol","span","wrapperCol","offset","PlaceOrders","props","stackId","setStackId","buyFocused","setBuyFocus","focusBorderTop","setFocusBorderTop","changeStatus","e","target","value","submitOrder","_price","document","getElementById","_amount","_total","drizzle","drizzleState","contract","contracts","CelebrityExchange","methods","placeBuyOrder","cacheSend","web3","utils","toWei","from","accounts","getTxStatus","transactions","transactionStack","txHash","status","position","top","zIndex","left","borderTop","textAlign","width","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Input, Button, Form } from \"antd\";\nimport BuyOrderBook from \"./BuyOrderBook\";\n\nconst layout = {\n\tlabelCol: { span: 0 },\n\twrapperCol: { offset: 2, span: 20 },\n};\n\nexport default function PlaceOrders(props) {\n\tconst [stackId, setStackId] = useState(null);\n\tconst [buyFocused, setBuyFocus] = useState(\"BUY\");\n\tconst [focusBorderTop, setFocusBorderTop] = useState(\n\t\t\"5px solid #55bd6c !important\"\n\t);\n\tuseEffect(() => {\n\t\tsetBuyFocus(buyFocused);\n\t\tbuyFocused == \"BUY\"\n\t\t\t? setFocusBorderTop(\"5px solid #55bd6c !important\")\n\t\t\t: setFocusBorderTop(\"5px solid #f1432f !important\");\n\t}, [buyFocused]);\n\tconst changeStatus = (e) => {\n\t\tsetBuyFocus(e.target.value);\n\t\tbuyFocused == \"BUY\"\n\t\t\t? setFocusBorderTop(\"5px solid #55bd6c !important\")\n\t\t\t: setFocusBorderTop(\"5px solid #f1432f !important\");\n\t};\n\n\tconst submitOrder = async (e) => {\n\t\tconst _price = document.getElementById(\"price\").value;\n\t\tconst _amount = document.getElementById(\"amount\").value;\n\t\tconst _total = document.getElementById(\"total\").value;\n\t\tconst { drizzle, drizzleState } = props;\n\t\tconst contract = drizzle.contracts.CelebrityExchange;\n\t\t// get the transaction states from the drizzle state\n\t\t// let drizzle know we want to call the `set` method with `value`\n\t\tconst stackId = await contract.methods.placeBuyOrder.cacheSend(\n\t\t\t\"0xDD1BcCD8da45D24823a85B5841Aa9861Cc8df301\",\n\t\t\tdrizzle.web3.utils.toWei(_amount),\n\t\t\tdrizzle.web3.utils.toWei(_total),\n\t\t\tdrizzle.web3.utils.toWei(_total) / 100,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tfrom: drizzleState.accounts[0],\n\t\t\t}\n\t\t);\n\t\tsetStackId(stackId);\n\t};\n\tconst getTxStatus = () => {\n\t\tconst { transactions, transactionStack } = props.drizzleState;\n\t\t// get the transaction hash using our saved `stackId`\n\t\tif (transactionStack[stackId]) {\n\t\t\tconst txHash = transactionStack[stackId];\n\n\t\t\treturn transactions[txHash] && transactions[txHash].status;\n\t\t}\n\t};\n\n\treturn (\n\t\t<section>\n\t\t\t{/* buy order seperate component, sell order seperate, load dynamically */}\n\t\t\t<div\n\t\t\t\tstyle={{ position: \"absolute\", top: \"5px\", zIndex: \"5\", left: \"5px\" }}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tid=\"BUY\"\n\t\t\t\t\tname=\"buyFocus\"\n\t\t\t\t\tvalue=\"BUY\"\n\t\t\t\t\tonClick={(value) => changeStatus(value)}\n\t\t\t\t\tchecked={buyFocused == \"BUY\" ? true : false}\n\t\t\t\t/>\n\t\t\t\t<label for=\"BUY\" style={{ borderTop: \"5px solid #55bd6c !important\" }}>\n\t\t\t\t\tBUY\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tid=\"SELL\"\n\t\t\t\t\tname=\"buyFocus\"\n\t\t\t\t\tvalue=\"SELL\"\n\t\t\t\t\tonClick={(value) => changeStatus(value)}\n\t\t\t\t/>\n\t\t\t\t<label for=\"SELL\" style={{ borderTop: { focusBorderTop } }}>\n\t\t\t\t\tSELL\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<Card className=\"placeOrders\">\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: \"70px\",\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Form {...layout} style={{ width: \"100%\" }}>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\tid=\"price\"\n\t\t\t\t\t\t\tlabel=\"PRICE\"\n\t\t\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input autoComplete=\"off\" addonBefore=\"PRICE\" suffix=\"ETH\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"amount\"\n\t\t\t\t\t\t\tlabel=\"AMOUNT\"\n\t\t\t\t\t\t\tid=\"price\"\n\t\t\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input autoComplete=\"off\" addonBefore=\"AMOUNT\" suffix=\"TOKENS\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"total\"\n\t\t\t\t\t\t\tlabel=\"TOTAL\"\n\t\t\t\t\t\t\tid=\"total\"\n\t\t\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input autoComplete=\"off\" addonBefore=\"TOTAL\" suffix=\"ETH\" />\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\tonClick={() => submitOrder()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<div>{getTxStatus()}</div>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</section>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}